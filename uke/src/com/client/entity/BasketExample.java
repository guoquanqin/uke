package com.client.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class BasketExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table basket
     *
     * @mbg.generated Wed Aug 08 09:27:39 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table basket
     *
     * @mbg.generated Wed Aug 08 09:27:39 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table basket
     *
     * @mbg.generated Wed Aug 08 09:27:39 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basket
     *
     * @mbg.generated Wed Aug 08 09:27:39 CST 2018
     */
    public BasketExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basket
     *
     * @mbg.generated Wed Aug 08 09:27:39 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basket
     *
     * @mbg.generated Wed Aug 08 09:27:39 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basket
     *
     * @mbg.generated Wed Aug 08 09:27:39 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basket
     *
     * @mbg.generated Wed Aug 08 09:27:39 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basket
     *
     * @mbg.generated Wed Aug 08 09:27:39 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basket
     *
     * @mbg.generated Wed Aug 08 09:27:39 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basket
     *
     * @mbg.generated Wed Aug 08 09:27:39 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basket
     *
     * @mbg.generated Wed Aug 08 09:27:39 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basket
     *
     * @mbg.generated Wed Aug 08 09:27:39 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basket
     *
     * @mbg.generated Wed Aug 08 09:27:39 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table basket
     *
     * @mbg.generated Wed Aug 08 09:27:39 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andBasketIdIsNull() {
            addCriterion("basket_id is null");
            return (Criteria) this;
        }

        public Criteria andBasketIdIsNotNull() {
            addCriterion("basket_id is not null");
            return (Criteria) this;
        }

        public Criteria andBasketIdEqualTo(Integer value) {
            addCriterion("basket_id =", value, "basketId");
            return (Criteria) this;
        }

        public Criteria andBasketIdNotEqualTo(Integer value) {
            addCriterion("basket_id <>", value, "basketId");
            return (Criteria) this;
        }

        public Criteria andBasketIdGreaterThan(Integer value) {
            addCriterion("basket_id >", value, "basketId");
            return (Criteria) this;
        }

        public Criteria andBasketIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("basket_id >=", value, "basketId");
            return (Criteria) this;
        }

        public Criteria andBasketIdLessThan(Integer value) {
            addCriterion("basket_id <", value, "basketId");
            return (Criteria) this;
        }

        public Criteria andBasketIdLessThanOrEqualTo(Integer value) {
            addCriterion("basket_id <=", value, "basketId");
            return (Criteria) this;
        }

        public Criteria andBasketIdIn(List<Integer> values) {
            addCriterion("basket_id in", values, "basketId");
            return (Criteria) this;
        }

        public Criteria andBasketIdNotIn(List<Integer> values) {
            addCriterion("basket_id not in", values, "basketId");
            return (Criteria) this;
        }

        public Criteria andBasketIdBetween(Integer value1, Integer value2) {
            addCriterion("basket_id between", value1, value2, "basketId");
            return (Criteria) this;
        }

        public Criteria andBasketIdNotBetween(Integer value1, Integer value2) {
            addCriterion("basket_id not between", value1, value2, "basketId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdIsNull() {
            addCriterion("goods_id is null");
            return (Criteria) this;
        }

        public Criteria andGoodsIdIsNotNull() {
            addCriterion("goods_id is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsIdEqualTo(Integer value) {
            addCriterion("goods_id =", value, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdNotEqualTo(Integer value) {
            addCriterion("goods_id <>", value, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdGreaterThan(Integer value) {
            addCriterion("goods_id >", value, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("goods_id >=", value, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdLessThan(Integer value) {
            addCriterion("goods_id <", value, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdLessThanOrEqualTo(Integer value) {
            addCriterion("goods_id <=", value, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdIn(List<Integer> values) {
            addCriterion("goods_id in", values, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdNotIn(List<Integer> values) {
            addCriterion("goods_id not in", values, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdBetween(Integer value1, Integer value2) {
            addCriterion("goods_id between", value1, value2, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdNotBetween(Integer value1, Integer value2) {
            addCriterion("goods_id not between", value1, value2, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsCountIsNull() {
            addCriterion("goods_count is null");
            return (Criteria) this;
        }

        public Criteria andGoodsCountIsNotNull() {
            addCriterion("goods_count is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsCountEqualTo(Integer value) {
            addCriterion("goods_count =", value, "goodsCount");
            return (Criteria) this;
        }

        public Criteria andGoodsCountNotEqualTo(Integer value) {
            addCriterion("goods_count <>", value, "goodsCount");
            return (Criteria) this;
        }

        public Criteria andGoodsCountGreaterThan(Integer value) {
            addCriterion("goods_count >", value, "goodsCount");
            return (Criteria) this;
        }

        public Criteria andGoodsCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("goods_count >=", value, "goodsCount");
            return (Criteria) this;
        }

        public Criteria andGoodsCountLessThan(Integer value) {
            addCriterion("goods_count <", value, "goodsCount");
            return (Criteria) this;
        }

        public Criteria andGoodsCountLessThanOrEqualTo(Integer value) {
            addCriterion("goods_count <=", value, "goodsCount");
            return (Criteria) this;
        }

        public Criteria andGoodsCountIn(List<Integer> values) {
            addCriterion("goods_count in", values, "goodsCount");
            return (Criteria) this;
        }

        public Criteria andGoodsCountNotIn(List<Integer> values) {
            addCriterion("goods_count not in", values, "goodsCount");
            return (Criteria) this;
        }

        public Criteria andGoodsCountBetween(Integer value1, Integer value2) {
            addCriterion("goods_count between", value1, value2, "goodsCount");
            return (Criteria) this;
        }

        public Criteria andGoodsCountNotBetween(Integer value1, Integer value2) {
            addCriterion("goods_count not between", value1, value2, "goodsCount");
            return (Criteria) this;
        }

        public Criteria andBasketTimeIsNull() {
            addCriterion("basket_time is null");
            return (Criteria) this;
        }

        public Criteria andBasketTimeIsNotNull() {
            addCriterion("basket_time is not null");
            return (Criteria) this;
        }

        public Criteria andBasketTimeEqualTo(Date value) {
            addCriterion("basket_time =", value, "basketTime");
            return (Criteria) this;
        }

        public Criteria andBasketTimeNotEqualTo(Date value) {
            addCriterion("basket_time <>", value, "basketTime");
            return (Criteria) this;
        }

        public Criteria andBasketTimeGreaterThan(Date value) {
            addCriterion("basket_time >", value, "basketTime");
            return (Criteria) this;
        }

        public Criteria andBasketTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("basket_time >=", value, "basketTime");
            return (Criteria) this;
        }

        public Criteria andBasketTimeLessThan(Date value) {
            addCriterion("basket_time <", value, "basketTime");
            return (Criteria) this;
        }

        public Criteria andBasketTimeLessThanOrEqualTo(Date value) {
            addCriterion("basket_time <=", value, "basketTime");
            return (Criteria) this;
        }

        public Criteria andBasketTimeIn(List<Date> values) {
            addCriterion("basket_time in", values, "basketTime");
            return (Criteria) this;
        }

        public Criteria andBasketTimeNotIn(List<Date> values) {
            addCriterion("basket_time not in", values, "basketTime");
            return (Criteria) this;
        }

        public Criteria andBasketTimeBetween(Date value1, Date value2) {
            addCriterion("basket_time between", value1, value2, "basketTime");
            return (Criteria) this;
        }

        public Criteria andBasketTimeNotBetween(Date value1, Date value2) {
            addCriterion("basket_time not between", value1, value2, "basketTime");
            return (Criteria) this;
        }

        public Criteria andGoodsTotalPriceIsNull() {
            addCriterion("goods_total_price is null");
            return (Criteria) this;
        }

        public Criteria andGoodsTotalPriceIsNotNull() {
            addCriterion("goods_total_price is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsTotalPriceEqualTo(Float value) {
            addCriterion("goods_total_price =", value, "goodsTotalPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsTotalPriceNotEqualTo(Float value) {
            addCriterion("goods_total_price <>", value, "goodsTotalPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsTotalPriceGreaterThan(Float value) {
            addCriterion("goods_total_price >", value, "goodsTotalPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsTotalPriceGreaterThanOrEqualTo(Float value) {
            addCriterion("goods_total_price >=", value, "goodsTotalPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsTotalPriceLessThan(Float value) {
            addCriterion("goods_total_price <", value, "goodsTotalPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsTotalPriceLessThanOrEqualTo(Float value) {
            addCriterion("goods_total_price <=", value, "goodsTotalPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsTotalPriceIn(List<Float> values) {
            addCriterion("goods_total_price in", values, "goodsTotalPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsTotalPriceNotIn(List<Float> values) {
            addCriterion("goods_total_price not in", values, "goodsTotalPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsTotalPriceBetween(Float value1, Float value2) {
            addCriterion("goods_total_price between", value1, value2, "goodsTotalPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsTotalPriceNotBetween(Float value1, Float value2) {
            addCriterion("goods_total_price not between", value1, value2, "goodsTotalPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsSizeIsNull() {
            addCriterion("goods_size is null");
            return (Criteria) this;
        }

        public Criteria andGoodsSizeIsNotNull() {
            addCriterion("goods_size is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsSizeEqualTo(String value) {
            addCriterion("goods_size =", value, "goodsSize");
            return (Criteria) this;
        }

        public Criteria andGoodsSizeNotEqualTo(String value) {
            addCriterion("goods_size <>", value, "goodsSize");
            return (Criteria) this;
        }

        public Criteria andGoodsSizeGreaterThan(String value) {
            addCriterion("goods_size >", value, "goodsSize");
            return (Criteria) this;
        }

        public Criteria andGoodsSizeGreaterThanOrEqualTo(String value) {
            addCriterion("goods_size >=", value, "goodsSize");
            return (Criteria) this;
        }

        public Criteria andGoodsSizeLessThan(String value) {
            addCriterion("goods_size <", value, "goodsSize");
            return (Criteria) this;
        }

        public Criteria andGoodsSizeLessThanOrEqualTo(String value) {
            addCriterion("goods_size <=", value, "goodsSize");
            return (Criteria) this;
        }

        public Criteria andGoodsSizeLike(String value) {
            addCriterion("goods_size like", value, "goodsSize");
            return (Criteria) this;
        }

        public Criteria andGoodsSizeNotLike(String value) {
            addCriterion("goods_size not like", value, "goodsSize");
            return (Criteria) this;
        }

        public Criteria andGoodsSizeIn(List<String> values) {
            addCriterion("goods_size in", values, "goodsSize");
            return (Criteria) this;
        }

        public Criteria andGoodsSizeNotIn(List<String> values) {
            addCriterion("goods_size not in", values, "goodsSize");
            return (Criteria) this;
        }

        public Criteria andGoodsSizeBetween(String value1, String value2) {
            addCriterion("goods_size between", value1, value2, "goodsSize");
            return (Criteria) this;
        }

        public Criteria andGoodsSizeNotBetween(String value1, String value2) {
            addCriterion("goods_size not between", value1, value2, "goodsSize");
            return (Criteria) this;
        }

        public Criteria andBasketStatusIsNull() {
            addCriterion("basket_status is null");
            return (Criteria) this;
        }

        public Criteria andBasketStatusIsNotNull() {
            addCriterion("basket_status is not null");
            return (Criteria) this;
        }

        public Criteria andBasketStatusEqualTo(Short value) {
            addCriterion("basket_status =", value, "basketStatus");
            return (Criteria) this;
        }

        public Criteria andBasketStatusNotEqualTo(Short value) {
            addCriterion("basket_status <>", value, "basketStatus");
            return (Criteria) this;
        }

        public Criteria andBasketStatusGreaterThan(Short value) {
            addCriterion("basket_status >", value, "basketStatus");
            return (Criteria) this;
        }

        public Criteria andBasketStatusGreaterThanOrEqualTo(Short value) {
            addCriterion("basket_status >=", value, "basketStatus");
            return (Criteria) this;
        }

        public Criteria andBasketStatusLessThan(Short value) {
            addCriterion("basket_status <", value, "basketStatus");
            return (Criteria) this;
        }

        public Criteria andBasketStatusLessThanOrEqualTo(Short value) {
            addCriterion("basket_status <=", value, "basketStatus");
            return (Criteria) this;
        }

        public Criteria andBasketStatusIn(List<Short> values) {
            addCriterion("basket_status in", values, "basketStatus");
            return (Criteria) this;
        }

        public Criteria andBasketStatusNotIn(List<Short> values) {
            addCriterion("basket_status not in", values, "basketStatus");
            return (Criteria) this;
        }

        public Criteria andBasketStatusBetween(Short value1, Short value2) {
            addCriterion("basket_status between", value1, value2, "basketStatus");
            return (Criteria) this;
        }

        public Criteria andBasketStatusNotBetween(Short value1, Short value2) {
            addCriterion("basket_status not between", value1, value2, "basketStatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table basket
     *
     * @mbg.generated do_not_delete_during_merge Wed Aug 08 09:27:39 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table basket
     *
     * @mbg.generated Wed Aug 08 09:27:39 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}